#!/usr/bin/env bash
# ClusterSSH needs X, tmux comes to rescue

check_inside_tmux()
{
  if [ -z "$TMUX" ]; then
    echo 'Please run the command in tmux session'
    exit -1;
  fi
}

main()
{
  check_inside_tmux

  local SSH_CMD='ssh'
  local charset=''
  local port=''

  while getopts "c:p:" OPTION
  do
    case $OPTION in
      c)
        charset=$OPTARG
        ;;
      p)
        port=$OPTARG
        ;;
    esac
  done

  shift $(( OPTIND - 1 ))

  if [ -n "$charset" ]; then
    SSH_CMD="luit -encoding $charset ssh"
  fi

  if [ -n "$port" ]; then
    SSH_CMD="$SSH_CMD -p$port"
  fi

  # already in a tmux session, won't need to specify session
  #TMUXSESSION=`echo $TMUX | awk -F, '{ print $3 }'`

  # create new window which will contain all the ssh sessions
  tmux new-window
  local TMUXWINDOW=`tmux list-window | awk -F: '/(active)/ { print $1 }'`


  # split window and `ssh` to `host`
  for host in "$@"; do
    # echo "[$SSH_CMD $host]"
    tmux split-window -v -t $TMUXWINDOW "exec $SSH_CMD $host"
    tmux select-layout -t $TMUXWINDOW even-vertical > /dev/null
    # tmux send-key -t 
    #sleep 0.3s
    # local TMUXPANE=`tmux list-panes -t $TMUXWINDOW | awk -F: 'END { print $1 }'`
    # tmux send-key -t "${TMUXWINDOW}.${TMUXPANE}" "$SSH_CMD $host" Enter
    #sleep 0.3s
  done
  tmux select-layout -t $TMUXWINDOW even-vertical > /dev/null

  # kill the first pane
  tmux kill-pane -t "${TMUXWINDOW}.0"
  tmux set-window-option -t $TMUXWINDOW synchronize-panes on > /dev/null
  tmux select-layout -t $TMUXWINDOW even-vertical > /dev/null
  tmux select-layout -t $TMUXWINDOW even-vertical > /dev/null
}

main $@
